import random
import logging
import sqlite3
from aiogram import types
from database import get_db_connection
from spescial import special_cats

conn = get_db_connection()
cursor = conn.cursor()

async def specialcat_command(message: types.Message):
    user_id = message.from_user.id


    cursor.execute("SELECT has_wishing_fountain FROM users WHERE user_id = ?", (user_id,))
    result = cursor.fetchone()

    if not result:
        await message.answer("–£ –≤–∞—Å –µ—â–µ –Ω–µ—Ç –ø—Ä–æ—Ñ–∏–ª—è. –ü–æ–ª—É—á–∏—Ç–µ –∫–æ—Ç–∞, —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –µ–≥–æ!")
        return

    has_wishing_fountain = result[0]

    if not has_wishing_fountain:
        await message.answer("–£ –≤–∞—Å –Ω–µ—Ç –§–æ–Ω—Ç–∞–Ω–∞ –∂–µ–ª–∞–Ω–∏–π. –ö—É–ø–∏—Ç–µ –µ–≥–æ –≤ –º–∞–≥–∞–∑–∏–Ω–µ!")
        return


    cat = random.choice(special_cats)
    logging.info(f"–í—ã–±—Ä–∞–Ω–∞ –∫–∞—Ä—Ç–æ—á–∫–∞ –∏–∑ special_cats: {cat}")


    cursor.execute("UPDATE users SET has_wishing_fountain = 0 WHERE user_id = ?", (user_id,))
    conn.commit()

    try:

        cursor.execute(
            "SELECT id FROM cards WHERE user_id = ? AND cat_id = ?",
            (user_id, cat["id"]),
        )
        existing_card = cursor.fetchone()


        if existing_card:
            cursor.execute(
                "DELETE FROM cards WHERE user_id = ? AND cat_id = ?",
                (user_id, cat["id"]),
            )
            conn.commit()


        cursor.execute(
            "INSERT INTO cards (user_id, cat_id, cat_image, rarity, points) VALUES (?, ?, ?, ?, ?)",
            (user_id, cat["id"], cat["photo"], cat["rarity"], cat["points"]),
        )
        conn.commit()

        logging.info(f"–ö–∞—Ä—Ç–æ—á–∫–∞ {cat['catname']} —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.")

    except sqlite3.Error as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∫–∞—Ä—Ç–æ—á–∫–∏ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö: {e}")
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∫–∞—Ä—Ç–æ—á–∫–∏.")
        return


    message_text = (
        f"üë§ {message.from_user.first_name}, —É—Å–ø–µ—Ö! –í—ã –Ω–∞—à–ª–∏ –æ—Å–æ–±—É—é –∫–∞—Ä—Ç–æ—á–∫—É! üéâ\n"
        f"üåü –ö–∞—Ä—Ç–æ—á–∫–∞: ¬´{cat['catname']}¬ª üê±\n"
        "--------------------------\n"
        f"üíé –†–µ–¥–∫–æ—Å—Ç—å: {cat['rarity']}\n"
        f"‚ú® –û—á–∫–∏: +{cat['points']}\n"
        f"üê± –ö–æ—Ç–æ–∫–æ–∏–Ω—ã: +{cat['cat_coins']}\n"
        f"üßß –û–ø–∏—Å–∞–Ω–∏–µ: {cat['catinfo']}\n"
    )

    await message.bot.send_photo(
        chat_id=message.chat.id,
        photo=cat["photo"],
        caption=message_text,
        parse_mode=types.ParseMode.MARKDOWN,
    )

def register_specialcat_handlers(dp):
    dp.register_message_handler(specialcat_command, commands=["specialcat"])